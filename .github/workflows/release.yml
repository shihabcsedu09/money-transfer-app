name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: ./mvnw clean package -DskipTests
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Money Transfer Application Release ${{ github.ref }}
          
          ### ðŸš€ What's New
          - Spring Boot application with concurrency handling
          - Distributed locking and deadlock prevention
          - Atomic transactions and optimistic locking
          - Comprehensive API for money transfers
          
          ### ðŸ“¦ Artifacts
          - JAR file ready for deployment
          - Docker image available
          
          ### ðŸ”§ Features
          - âœ… Distributed Locking
          - âœ… Deadlock Prevention  
          - âœ… Atomic Transactions
          - âœ… Optimistic Locking
          - âœ… Comprehensive Testing
          
          ### ðŸš€ Live Demo
          **Live API**: https://money-transfer-app-production-9d8e.up.railway.app
          
          ### ðŸ“‹ API Endpoints
          - `POST /api/v1/transfers` - Create transfer
          - `GET /api/v1/transfers/{id}` - Get transfer details
          - `GET /api/v1/transfers/health` - Health check
          
          ### ðŸ§ª Test the API
          ```bash
          curl -X POST https://money-transfer-app-production-9d8e.up.railway.app/api/v1/transfers \
            -H "Content-Type: application/json" \
            -d '{
              "fromAccountNumber": "ACC001234567890",
              "toAccountNumber": "ACC002345678901", 
              "amount": 100.00,
              "currency": "USD",
              "description": "Test transfer"
            }'
          ```
        draft: false
        prerelease: false
        
    - name: Upload JAR Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/money-transfer-app-1.0.0.jar
        asset_name: money-transfer-app-${{ github.ref_name }}.jar
        asset_content_type: application/java-archive
        
    - name: Build Docker image
      run: docker build -t money-transfer-app:${{ github.ref_name }} .
      
    - name: Save Docker image
      run: docker save money-transfer-app:${{ github.ref_name }} | gzip > money-transfer-app-${{ github.ref_name }}.tar.gz
      
    - name: Upload Docker Image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./money-transfer-app-${{ github.ref_name }}.tar.gz
        asset_name: money-transfer-app-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip 